@model List<KRS_G54.Models.Knowledge>;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, AuthoringTagHelpers
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
    var userId = Context.Session.GetString("accId");
}
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            background-color: white;
        }



        .flashcard {
            width: 1140px;
            height: 400px;
            background-color: white;
            color: black;
            border-radius: 10px;
            position: relative;
            box-shadow: 5px 5px 10px rgba(0,0,0,0.2);
            margin: 0 auto;
            margin-top: 50px;
            transform-style: preserve-3d;
            transition: all 1s ease-in-out;
            cursor: pointer;
        }

            .flashcard .front, .flashcard .back {
                width: 100%;
                height: 100%;
                position: absolute;
                border-radius: 10px;
                backface-visibility: hidden;
                padding: 20px;
                box-sizing: border-box;
            }

            .flashcard .front {
                z-index: 2;
                background-color: lightblue;
                display: flex;
                flex-direction: column;
                justify-content: space-around;
                align-items: center;
                transform: rotateY(0deg);
                letter-spacing: -0.5px; /* Điều chỉnh khoảng cách giữa các ký tự */
                text-align: center; /* Căn giữa nội dung */
            }

            .flashcard .back {
                transform: rotateY(-180deg);
                background-color: whitesmoke;
                display: flex;
                flex-direction: column;
                justify-content: space-around;
                align-items: center;
            }

                .flashcard .front h2, .flashcard .back h2 {
                    margin: 1px 0;
                    font-size: 24px;
                    font-weight: normal; /* Để chắc chắn rằng font-weight là mặc định */
                    line-height: 1.5; /* Điều chỉnh chiều cao dòng cho chữ tiếng Việt */
                    white-space: pre-line; /* Xuống dòng được bảo tồn */
                    overflow: auto; /* Tạo thanh cuộn nếu nội dung vượt quá kích thước */
                }

                .flashcard .front p, .flashcard .back p {
                    margin: 1px 0;
                    font-size: 18px;
                    white-space: pre-line; /* Xuống dòng được bảo tồn */
                }

                .flashcard .front button, .flashcard .back button {
                    border: none;
                    background-color: dodgerblue;
                    color: white;
                    padding: 10px 20px;
                    border-radius: 5px;
                    cursor: pointer;
                }

                    .flashcard .front button:hover, .flashcard .back button:hover {
                        background-color: blue;
                    }

        .flipped {
            transform: rotateY(-180deg);
        }

        .flashcard .front p, .flashcard .back p {
            display: inline-block;
            margin: 0;
            font-size: 18px;
        }

        #buttonContainer {
            text-align: center;
            width: 100%;
        }

        #nextButton, #prevButton {
            margin: 10px;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            background-color: dodgerblue;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            #nextButton:hover, #prevButton:hover {
                background-color: blue; /* Màu nền của nút khi rê chuột qua */
            }

        #quizletContainer {
            margin-top: 20px;
        }

        .quizletItem {
            margin-bottom: 10px;
            overflow: hidden;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            background-color: #E0FFFF;
        }

        .question,
        .answer {
            float: left;
            width: calc(50% - 10px);
            box-sizing: border-box;
            padding: 10px;
        }

        .separator {
            color: black;
            height: 100%;
            width: 100px;
            background-color: #black;
            float: left;
        }

        .rounded-circle {
            width: 50px; /* Điều chỉnh kích thước vòng tròn */
            height: 50px; /* Điều chỉnh kích thước vòng tròn */
            border-radius: 50%; /* Làm cho nút trở thành hình tròn */
            display: flex;
            justify-content: center;
            align-items: center;
        }
        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 50%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        .modal-buttons {
            display: flex;
            justify-content: flex-end;
            margin-top: 10px;
        }

            .modal-buttons button {
                margin-left: 10px;
            }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- Thêm jQuery -->
    <script>

        var currentQuestion = 0;
        var totalQuestions = @ViewBag.Count;
        function showNextQuestion() {
            var knowledgeItems = $(".knowledgeItem");

            currentQuestion = currentQuestion % knowledgeItems.length;
            $("#questionCounter").text((currentQuestion + 1) + " / " + totalQuestions);

            $(".front h2").text(knowledgeItems.eq(currentQuestion).find("div").first().text().split(' Answer:')[0]);

            $(".back h2").text(knowledgeItems.eq(currentQuestion).find("div").last().text().split('Answer:')[1].trim());
        }

        $(document).ready(function() {
            showNextQuestion(); // Hiển thị câu hỏi và câu trả lời đầu tiên khi trang được tải

            $(".flashcard").click(function() {
                var flashcard = $("#flashcard");
                flashcard.toggleClass("flipped");
            });

            $("button#nextButton").click(function(event) {
                event.stopPropagation(); // Ngăn chặn sự kiện click từ nút Next lan ra phần tử cha
                currentQuestion++;
                showNextQuestion();
            });

            $("button#prevButton").click(function(event) {
                event.stopPropagation(); // Ngăn chặn sự kiện click từ nút Previous lan ra phần tử cha
                currentQuestion--;
                if (currentQuestion < 0) {
                    currentQuestion = $(".knowledgeItem").length - 1;
                }
                showNextQuestion();
            });
        });


        $(document).ready(function() {
            // Open the modal when delete button is clicked
            $(".deleteFlashcardBtn").click(function(event) {
                event.preventDefault();
                var flashcardId = $(this).data("flashcard-id");
                $("#confirmModal").data("flashcard-id", flashcardId).show();
            });

            // Confirm deletion
            $("#confirmBtn").click(function() {
                var flashcardId = $("#confirmModal").data("flashcard-id");
                $.ajax({
                    url: '@Url.Action("DeleteFlashcard", "Knowledge")',
                    type: 'POST',
                    data: {
                        flashcardId: flashcardId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            // Redirect to ListSubject after successful deletion
                            window.location.href = result.redirectUrl;
                        } else {
                            alert("Error deleting flashcard: " + result.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert("Error deleting flashcard: " + xhr.responseText);
                    }
                });
                $("#confirmModal").hide();
            });

            // Cancel deletion
            $("#cancelBtn").click(function() {
                $("#confirmModal").hide();
            });

            // Close the modal when clicking on the close button or outside the modal
            $(".close").click(function() {
                $("#confirmModal").hide();
            });

            $(window).click(function(event) {
                if (event.target == document.getElementById("confirmModal")) {
                    $("#confirmModal").hide();
                }
            });
        });
    </script>
</head>
<body>
    <div>
        <ul style="list-style-type: none; text-align: center;">
            <li><strong style="font-size: 24px;">@Model.FirstOrDefault()?.Flashcard?.FlashcardName.ToUpper()</strong></li>
        </ul>
    </div>
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-12">
                <div class="row justify-content-center">
                    <div class="col-lg-4 mb-4">
                        <a href="@Url.Action("Flashcard", "Knowledge",
                        new { subjectId = Model.FirstOrDefault()?.FlashcardId })"
                           class="btn btn-primary btn-lg btn-block">FlashCard</a>
                    </div>
                    <div class="col-lg-4 mb-4">
                        <a href="@Url.Action("TakeQuiz", "Knowledge",
                        new { flashcardId = Model.FirstOrDefault()?.FlashcardId })"
                           class="btn btn-primary btn-lg btn-block">Write&Learn</a>
                    </div>
                    <div class="col-lg-4 mb-4">
                        <a href="@Url.Action("FlashcardExam", "Knowledge",
                        new { flashcardId = Model.FirstOrDefault()?.FlashcardId })"
                           class="btn btn-primary btn-lg btn-block">Simulation Exam</a>
                    </div>
                </div>
            </div>
            <div class="col-lg-12 text-center">
                <div class="row justify-content-center">
                    <div class="col-md-12 mb-3">

                        <div class="flashcard" id="flashcard">
                            <div class="front">
                                <!-- cập nhật JavaScript -->
                                <h2></h2>
                            </div>
                            <div class="back">

                                <h2></h2>
                            </div>
                        </div>
                    </div>

                </div>
                <div id="buttonContainer" class="d-flex justify-content-center align-items-center">
                    <button id="prevButton" class="btn btn-secondary btn-lg rounded-circle">
                        <span>&#x2190;</span>
                    </button>
                    <span id="questionCounter" class="mx-2">@ViewBag.CurrentQuestion / @ViewBag.Count</span>
                    <button id="nextButton" class="btn btn-secondary btn-lg rounded-circle">
                        <span>&#x2192;</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div id="knowledgeList" style="display: none;">
        @{
            int order = 1;
        }
        @foreach (var item in Model)
        {
            <div class="knowledgeItem" style="display: none;">
                <div>
                    @Html.Raw(item.Knowledge1.Replace("\n", "<br>"))
                    Answer: @Html.Raw(item.Answer.Replace("\n", "<br>"))
                </div>
                <hr />
            </div>
            order++;
        }
    </div>
    @foreach (var flashcard in Model.Select(k => k.Flashcard).Distinct())
    {
        @if (Convert.ToInt32(userId) == flashcard.UserId)
        {
            <div class="col-md-12">
                <div class="row">
                    <div class="col-lg-6 d-flex justify-content-center align-items-center">
                        <a href="@Url.Action("Edit", "Knowledge", new { flashcardId = Model.FirstOrDefault()?.FlashcardId })" class="btn btn-primary mr-2">Edit FlashCard</a>
                    </div>
                    <div class="col-lg-6 d-flex justify-content-center align-items-center">
                        <form method="post" action="@Url.Action("DeleteFlashcard", "Knowledge")" onsubmit="return confirm('Are you sure you want to delete this flashcard and its associated knowledge?');">
                            <input type="hidden" name="flashcardId" value="@Model.FirstOrDefault()?.FlashcardId" />
                            <div class="col-lg-6 d-flex justify-content-center align-items-center">
                                <button type="button" class="btn btn-danger deleteFlashcardBtn" data-flashcard-id="@flashcard.FlashcardId">Delete Flashcard</button>
                            </div>
                            @Html.AntiForgeryToken()
                        </form>
                    </div>
                </div>
            </div>

        }

    }

    <div class="container" id="quizletContainer">
        @{
            int Qid = 1;
        }
        @foreach (var item in Model.Select(k => k.Flashcard).Distinct())
        {
            <div class="row">
                <div class="col-lg-12">
                    <p>The Author: @item.User.FullName</p>
                </div>
                @if (@item.Description != null)
                {
                    <div class="col-lg-12">
                        <p>Description: @item.Description</p>
                    </div>
                }
            </div>
        }

        @foreach (var item in Model)
        {

            <div class="quizletItem">
                <div class="question">


                    <strong>Definition @Qid:</strong><br>
                    <span>@Html.Raw(item.Knowledge1.Replace("\n", "<br>"))</span>
                </div>

                <div class="answer">
                    <strong>Terms:</strong><br>
                    <span>@Html.Raw(item.Answer.Replace("\n", "<br>"))</span>
                </div>
            </div>
            Qid++;
        }
    </div>
    <div id="confirmModal" class="modal">
        <div class="modal-content">

            <p>Are you sure you want to delete this Flashcard?</p>
            <div class="modal-buttons">
                <button id="confirmBtn" class="btn btn-danger">Yes</button>
                <button id="cancelBtn" class="btn btn-secondary">No</button>
            </div>
        </div>
    </div>
</body>
</html>


